name: Deploy to Amazon EC2

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: aurudabucket
  CODE_DEPLOY_APPLICATION_NAME: aurudadeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: cranegroup

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    #(1) 기본 체크 아웃
    - name: Checkout
      uses: actions/checkout@v3

    # (1.5) gradlew 실행 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    #(2) JDK 21 세팅
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

# (2.5) application.yml.template -> application.yml 변환 및 환경변수 치환
    - name: Generate application.yml from template
      run: |
        sed -e "s|\${YOUR_DATABASE_USER_NAME}|${{ secrets.DB_USERNAME }}|g" \
            -e "s|\${YOUR_DATABASE_USER_PASSWORD}|${{ secrets.DB_PASSWORD }}|g" \
            -e "s|\${YOUR_GOOGLE_USERNAME_HERE}|${{ secrets.GOOGLE_USERNAME }}|g" \
            -e "s|\${YOUR_GOOGLE_PASSWORD_HERE}|${{ secrets.GOOGLE_PASSWORD }}|g" \
            -e "s|\${YOUR_OPENAI_API_KEY_HERE}|${{ secrets.OPENAI_API_KEY }}|g" \
            -e "s|\${YOUR_DATA_API_KEY_HERE}|${{ secrets.DATA_API_KEY }}|g" \
            -e "s|\${YOUR_GOOGLE_API_KEY_HERE}|${{ secrets.GOOGLE_API_KEY }}|g" \
            src/main/resources/application.yml.template > src/main/resources/application.yml

    # (3) Gradle build (Test 제외)
    - name: Build with Gradle
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: clean build -x test
        
    # (4) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # (5) 빌드 결과물을 S3 버킷에 업로드
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .
